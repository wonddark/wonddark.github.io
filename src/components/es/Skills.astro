---
import React from "../brand-logos/React.astro";
import Next from "../brand-logos/Next.astro";
import AstroLogo from "../brand-logos/Astro.astro";
import Remix from "../brand-logos/Remix.astro";
import Typescript from "../brand-logos/Typescript.astro";
import Javascript from "../brand-logos/Javascript.astro";
import CSS3 from "../brand-logos/CSS3.astro";
import SASS from "../brand-logos/SASS.astro";
import AntD from "../brand-logos/AntD.astro";
import Bootstrap from "../brand-logos/Bootstrap.astro";
import Jest from "../brand-logos/Jest.astro";
import Mocha from "../brand-logos/Mocha.astro";
import MUI from "../brand-logos/MUI.astro";
import StyledComponents from "../brand-logos/StyledComponents.astro";
import TailwindCSS from "../brand-logos/TailwindCSS.astro";
import TestingLibrary from "../brand-logos/TestingLibrary.astro";
import Vite from "../brand-logos/Vite.astro";
import Webpack from "../brand-logos/Webpack.astro";
import AWS from "../brand-logos/AWS.astro";
import Axios from "../brand-logos/Axios.astro";
import Bitbucket from "../brand-logos/Bitbucket.astro";
import Docker from "../brand-logos/Docker.astro";
import Express from "../brand-logos/Express.astro";
import Git from "../brand-logos/Git.astro";
import Github from "../brand-logos/Github.astro";
import Bash from "../brand-logos/Bash.astro";
import GoogleAnalytics from "../brand-logos/GoogleAnalytics.astro";
import GoogleTagManager from "../brand-logos/GoogleTagManager.astro";
import GrapQL from "../brand-logos/GrapQL.astro";
import Jira from "../brand-logos/Jira.astro";
import Linux from "../brand-logos/Linux.astro";
import MySQL from "../brand-logos/MySQL.astro";
import NPM from "../brand-logos/NPM.astro";
import OpenSUSE from "../brand-logos/OpenSUSE.astro";
import PHP from "../brand-logos/PHP.astro";
import PNPM from "../brand-logos/PNPM.astro";
import PostgreSQL from "../brand-logos/PostgreSQL.astro";
import Redux from "../brand-logos/Redux.astro";
import Slack from "../brand-logos/Slack.astro";
import SQLite from "../brand-logos/SQLite.astro";
import Swagger from "../brand-logos/Swagger.astro";
import Symfony from "../brand-logos/Symfony.astro";
import WebStorm from "../brand-logos/WebStorm.astro";
---

<section class="bg-[#1D2122]">
  <div
    class="max-w-[1560px] mx-auto px-10 lg:px-16 pt-10 h-svh flex flex-col gap-[70px]">
    <p id="about"
       class="font-semibold text-2xl lg:text-3xl leading-[1.2] text-center tracking-[0.19em] uppercase text-[#009394]">
      Skills</p>
    <div>
      <p class="font-bold text-4xl text-center">¿Qué hay en la caja de herramientas?</p>
      <p class="mt-10 font-medium text-[16px] leading-[1.25] text-center">
        Frameworks, librerías y herramientas que usualmente utilizo en mi día a día</p>
    </div>
    <div class="skils-contaner flex-1 overflow-hidden overflow">
      <div class="skills relative text-[#009394] h-full">
        <React />
        <Next />
        <Remix />
        <AstroLogo />
        <Typescript />
        <Javascript />
        <CSS3 />
        <SASS />
        <AntD />
        <Bootstrap />
        <Jest />
        <Mocha />
        <MUI />
        <StyledComponents />
        <TailwindCSS />
        <TestingLibrary />
        <Vite />
        <Webpack />
        <AWS />
        <Axios />
        <Bitbucket />
        <Docker />
        <Express />
        <Git />
        <Github />
        <Bash />
        <GoogleAnalytics />
        <GoogleTagManager />
        <GrapQL />
        <Jira />
        <Linux />
        <MySQL />
        <NPM />
        <OpenSUSE />
        <PHP />
        <PNPM />
        <PostgreSQL />
        <Redux />
        <Slack />
        <SQLite />
        <Swagger />
        <Symfony />
        <WebStorm />
      </div>
    </div>
  </div>
</section>

<script is:inline>
  let firstAnimate = null
  function animateFirst() {
    const skillsContainer = document.getElementsByClassName("skills")?.[0];

    const svgElements = skillsContainer.getElementsByTagName("svg");
    for (let svgElement of svgElements) {
      svgElement.style.fontSize = 'unset';
      svgElement.style.top = 'unset';
      svgElement.style.left = 'unset';
      svgElement.style.animationDelay = 'unset';
      svgElement.style.display = 'none';
    }

    const containerWidth = skillsContainer.clientWidth;
    const containerHeight = skillsContainer.clientHeight;

    const fontSizes = [14, 24, 38, 50, 72];

    const maxElements = Math.floor(containerWidth / 38);

    for (let i = 0; i < maxElements; i++) {
      const randomPositionX = Math.random() * containerWidth;
      const randomPositionY = Math.random() * containerHeight;
      const randomFontSizeIndex = Math.floor(Math.random() * fontSizes.length);

      const svgElement = svgElements.item(Math.floor(Math.random() * (svgElements.length - 1)));
      svgElement.style.fontSize = `${fontSizes[randomFontSizeIndex]}px`;
      svgElement.style.top = `${randomPositionY}px`;
      svgElement.style.left = `${randomPositionX}px`;
      svgElement.style.animationDelay = `${Math.random() * (1000 - 1)}ms`;
      svgElement.style.display = 'initial';
    }

    if (firstAnimate) {
      clearInterval(firstAnimate)
    }

    firstAnimate = setInterval(animateFirst, 5000)
  }

  animateFirst()
  </script>